service: omni-project44-api-services

provider:
  name: aws
  runtime: nodejs14.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  deploymentBucket: ${ssm:/omni-dw/${self:provider.stage}/sls/deployment/bucket}
  role: ${ssm:/omni-dw/${self:provider.stage}/lambda/role}
  vpc:
    securityGroupIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/sgId}
    subnetIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/subnetA}
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/subnetB}

custom:
  prune:
    automatic: true
    number: 3
  jest:
    collectCoverage: true

package:
  individually: true
  exclude:
    - Jenkinsfile
    - 'node_modules/**'
    - 'config/**'

functions:
  # - ${file(config/functions/GetRedshiftRecord.yml)}
  - ${file(config/functions/BatchTrigger.yml)}

plugins:
  - serverless-offline
  - serverless-prune-plugin

# layers:
#   commonP44Libs:
#     path: lib
#     compatibleRuntimes:
#       - nodejs14.x
#     package:
#       include:
#         - node_modules/**

resources:
  Resources:
    #batch related resources
    OmniBatchServiceRole: ${file(config/batch/computeEnvironment.yml):OmniBatchServiceRole}
    OmniComputeEnvironment: ${file(config/batch/computeEnvironment.yml):OmniComputeEnvironment}
    OmniJobQueue: ${file(config/batch/jobQueue.yml):OmniJobQueue}
    P44JobBatchTaskExecutionRole: ${file(config/batch/p44Job.yml):P44JobBatchTaskExecutionRole}
    P44JobDefinition: ${file(config/batch/p44Job.yml):P44JobDefinition}
    P44BatchLogGroup: ${file(config/batch/p44Job.yml):P44BatchLogGroup}
