P44JobBatchTaskExecutionRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: omni-dw-project44-taskexec-role-${self:provider.stage}
    AssumeRolePolicyDocument:
      Statement:
      - Effect: Allow
        Principal:
          Service: [ecs-tasks.amazonaws.com]
        Action: ['sts:AssumeRole']
    Path: /
    Policies:
      - PolicyName: AmazonECSTaskExecutionRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - 'ecr:GetAuthorizationToken'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:BatchGetImage'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'
      - PolicyName: omni-dw-project44-batch-task-policy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:ListBucket
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: NmSkuFeedExportBucket
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: NmSkuFeedExportBucket
                  - /*
      - PolicyName: omni-dw-project44-ecs-task-dynamo-policy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:BatchWriteItem
              - dynamodb:BatchGetItem
            Resource:
              - ${ssm:/${self:service}/${self:provider.stage}/dynamo.icc_source.nm.sku_feed_arn}

NmSkuFeedJobDefinition:
  Type: AWS::Batch::JobDefinition
  Properties:
    JobDefinitionName: nm-dt-icc-sku-feed-job-definition-${self:provider.stage}
    Type: container
    RetryStrategy:
      Attempts: 1
    PlatformCapabilities:
      - FARGATE
    ContainerProperties:
      Command:
        - node
        - server.js
      ResourceRequirements:
        - Value: 4
          Type: VCPU
        - Value: 30720
          Type: MEMORY
      FargatePlatformConfiguration:
        PlatformVersion: 1.3.0
      LogConfiguration:
        LogDriver: awslogs
        Options:
          awslogs-group: !Ref NmSkuFeedBatchLogGroup
          awslogs-region: !Ref AWS::Region
          awslogs-stream-prefix: nm-dt-icc-sku-feed-logs
      ExecutionRoleArn: !GetAtt 'NmSkuFeedBatchTaskExecutionRole.Arn'
      JobRoleArn: !GetAtt 'NmSkuFeedBatchTaskExecutionRole.Arn'
      Image:
        Fn::Join:
        - ''
        - - Ref: AWS::AccountId
          - .dkr.ecr.
          - Ref: AWS::Region
          - '.amazonaws.com/nm-dt-icc-'
          - ${self:provider.stage}
          - ':'
          - ${self:provider.stage}
      NetworkConfiguration:
        AssignPublicIp: ENABLED

NmSkuFeedBatchLogGroup:
  Type: AWS::Logs::LogGroup
  Properties:
    LogGroupName: nm-dt-icc-sku-feed-log-group-${self:provider.stage}
    RetentionInDays: 7